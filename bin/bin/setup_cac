#!/bin/bash

# Color Picker 
if [ -t 1 ]; then
    COLOR_RED="\033[31m"
    COLOR_OFF="\033[0m"
fi

error() {
    local message="$1"
    local exitcode="${2:-2}" # default exit code is 2
    echo -e "${COLOR_RED}Error: ${message}${COLOR_OFF}"
    exit $exitcode
}

detect_os() {
    echo -e "\n[Detecting operating system...]"
    if grep -qi "ubuntu" /etc/os-release; then
        echo "Ubuntu detected"
        pkg_manager="apt"
        opensc_module="/usr/lib/x86_64-linux-gnu/opensc-pkcs11.so"
        pkg_list="pcsc-tools pcscd libnss3-tools p11-kit opensc openconnect"
    elif grep -qi "fedora" /etc/os-release || grep -qi "rhel" /etc/os-release; then
        echo "Fedora/RHEL detected"
        pkg_manager="dnf"
        opensc_module="/usr/lib64/pkcs11/opensc-pkcs11.so"
        pkg_list="pcsc-lite pcsc-perl pcsc-tools nss-tools p11-kit opensc openconnect"
    else
        error "Unsupported operating system"
    fi
}

install_packages() {
    echo -e "\n[Installing packages...]"
    if [ "$pkg_manager" == "apt" ]; then
        apt install -y $pkg_list || error "Failed to install packages via apt"
    elif [ "$pkg_manager" == "dnf" ]; then
        dnf install -y $pkg_list || error "Failed to install packages via dnf"
    fi
    echo "Packages installation completed."
}

enable_and_start_service() {
    local service="$1"
    echo -e "\n[Enabling and starting $service service...]"
    systemctl enable "$service" || error "Failed to enable $service"
    systemctl start "$service" || error "Failed to start $service"
    echo "$service service is enabled and started."
}

check_file_exists() {
    local file="$1"
    local error_msg="$2"
    if [ ! -f "$file" ]; then
        error "$error_msg"
    fi
}

configure_opensc_module() {
    local opensc_p11mod="/etc/pkcs11/modules/opensc.module"
    
    echo -e "\n[Configuring OpenSC PKCS#11 module...]"
    check_file_exists "$opensc_module" "The OpenSC PKCS#11 module is missing at $opensc_module. Check your system."
    
    if [ -f "$opensc_p11mod" ]; then
        error "$opensc_p11mod already exists. Please remove it and try again."
    fi

    echo "module:$opensc_module" > "$opensc_p11mod" || error "Failed to configure OpenSC PKCS#11 module"
    echo "OpenSC PKCS#11 module configuration completed."
}

configure_chrome_cac_module() {
    echo -e "\n[Configuring Chrome for CAC module...]"
    modutil -dbdir sql:.pki/nssdb/ -add "CAC Module" -libfile "$opensc_module" || error "Failed to add CAC Module"

    echo -e "\n[Verifying if CAC Module is loaded...]"
    modutil -dbdir sql:.pki/nssdb/ -list | grep -q "CAC" || error "CAC Module not found"
    echo "CAC Module successfully loaded."
}

main() {
    if [ "$(id -u)" != "0" ]; then
        error "Must be run as root" 1
    fi

    detect_os
    install_packages
    enable_and_start_service "pcscd"
    configure_opensc_module

    pushd "$HOME" || error "Failed to navigate to home directory"
    configure_chrome_cac_module
    popd || error "Failed to return to previous directory"

    echo "[DONE]."
}

main

