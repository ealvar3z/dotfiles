# Change prefix key from Ctrl+b to Ctrl+a
set -g prefix C-s

# "Prefix" "r" reloads configuration file
bind r source-file ~/.tmux.conf \; display-message "Tmux configuration reloaded"

# Make it possible to scroll window context with the mouse
set -g mouse on

# Use 256 colors
set -g default-terminal "tmux-256color"
set-option -sa terminal-features ',xterm-256color:RGB'
set-option -sg escape-time 10
set-option -g focus-events on

# Enable vim navigation in copy mode
setw -g mode-keys vi
setw -g status-keys vi

# bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -sel clip -i"

# Increase scroll buffer
set -g history-limit 20000

# Update status-{left,right} more often (default: 15)
set -g status on
set -g status-interval 60
set -g status-right "#H %a %H:%M:%S battery:#($HOME/bin/batt)"

bind c new-window      -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind w last-pane
bind n next-window

# Copy mode
bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind B choose-buffer # choose which buffer to paste from
bind p paste-buffer  # paste from the top paste buffer
bind P run "wl-paste | tmux load-buffer - ; tmux paste-buffer"

# Use v to trigger selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi C-g send-keys -X cancel
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line

# Copy to clipboard functionality
if-shell '[[ $OSTYPE == linux* ]]' {
    # For Linux with wl-copy (Wayland) or xclip (X11)
    if-shell 'command -v wl-copy > /dev/null 2>&1' \
        'bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"' \
        'if-shell "command -v xclip > /dev/null 2>&1" \
            "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel \"xclip -in -selection clipboard\""'
} {
    # For macOS
    if-shell '[[ $OSTYPE == darwin* ]]' \
        'bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"'
}
